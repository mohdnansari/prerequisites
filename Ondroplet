NOTES:
1) Digital ocean instances wll have the firewall utility UFW. Following command will set a port open "ufw allow 8080"
   "ufw status" will show the list of all open ports

Step1: create a DO droplet instance with preinstalled docker image on ubuntu 18+.
Step2: create a non-root super user
      https://www.digitalocean.com/community/tutorials/how-to-create-a-sudo-user-on-ubuntu-quickstart

Step3: install golang
      https://www.digitalocean.com/community/tutorials/how-to-install-go-on-ubuntu-18-04
Step4: Correctly set GOPATH and GOROOT. essential for go runtime.
Step5: install nodeJS through PPA
      https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04
      **Note: run "npm -v" at least once after installation. this creates a much needed config file that npm will search for in 
              future runs.

Step6: now download the fabric binary images along with fabric-samples

Step7: **** verify installation of fabric ***
      A) run ./byfn.sh up -t 100  !!! See point D befor running this !!!
            Note: Ubuntu 18+ takes up RAM. The VM instance should have 2GB of RAM. Shorter RAM can result in runtime memory 
                  exhaustion issues. 
      B) if something goes wrong due to connectivity issues/etc, before runnign byfn up again, first bring down with "byfn down"
         Also, make sure there are not running containers (docker ps -aq). If needed kill the ones in memory.
      C) ./byfn down and then docker rm $(docker ps -aq)
      D) IMPORTANT: while running ./byfn.sh up, sometimes the script runs slow, due to various factors like CPU, Ram availability etc
                    use the timeout flag i.e. -t 100, so that the process waits 100 seconds before timing out.

## TROUBLESHOOTING Lessons:

1) Received the following error: 
         ``` Error reading configuration: Unsupported Config Type ""

This issue is discussed on the Jira ticket https://jira.hyperledger.org/browse/FAB-15582

This error is a result of the configpath variable not set properly. For the 3 org example, 
STEP1) it should be set to 3node2channel/deployment (instead of 3node2channel directory as per the tutorial). 
   i.e. set FABRIC_CFG_PATH to "3node2channel/deployment"
STEP2) the crypto-config directory needs to be present inside the directory deployment.
So the directory structure should be:

    *3node2channel
    **channelartifacts
    **deployment
    ***crypto_config
    ***crypto_config.yaml
    ***configtx.yaml
Therefore, before running the command, move the said directory to the right place, set the config path variable, and then run the
command configtxgen. 
    
../bin/configtxgen -configPath ./deployment -profile ThreeOrgsOrdererGenesis -outputBlock ./channel-artifacts/genesis.block


2) "other_hosts" variable is mentioned at multiple places inside of .yml files for node1, node2, node3. make sure to update this with the orderer address 
   in all these locations before bringing the network up using docker-compose files.
   
3) DO droplets, by default do not contain any private IP addresses. In order ot make use of public IP address inside of yml files 
   OPEN THE PORT using ufw allow **** inside of each instance. we will need port "ufw allow 7050:7053/tcp" 
